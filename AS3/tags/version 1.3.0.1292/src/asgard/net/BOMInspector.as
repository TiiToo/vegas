package asgard.net {    import flash.utils.ByteArray;        /**     * This static tool class inspect and transform the BOM in a ByteArray object.     */    public class BOMInspector     {                /**         * Indicates if the specified BOM is register in the passed-in ByteArray reference.         */        public static function containsBOM( byte:ByteArray , bom:BOM ):Boolean        {            if ( byte != null )            {                byte.position = 0 ;                var values:Array = bom.valueOf() as Array;                if ( values!= null && values.length > 0 && byte.length >= values.length )                {                    var cur:int  ;                    var code:int ;                    var size:int = values.length ;                    for( var i:int ; i < size ; i++ )                    {                        cur  = byte[i] as int ;                        code = values[i] ;                        if( code == cur )                        {                            continue ;                        }                        else                        {                            if ( bom == BOM.UTF7 && i == 3 )                            {                                return Boolean( code && cur ) ;                            }                            return false ;                        }                    }                    return true ;                }            }            return false ;        }        //        /**//         * Remove the specified BOM in the passed-in ByteArray reference.//         *///        public static function removeBOM( byte:ByteArray , bom:BOM ):Boolean//        {//            var b:Boolean ;//            if ( byte != null && containsBOM( byte, bom ) )//            {//                var values:Array  = bom.valueOf() as Array ;//                var endian:String = byte.endian ;//                //                byte.position = 0 ;//                byte.endian   = Endian.LITTLE_ENDIAN ;//                //                byte.writeBytes( byte , 0 , byte.length - ( values != null ? values.length : 0 ) ) ;//                //                byte.endian = endian ;//                //                return true ;//            }//            return b ;//        }    }}