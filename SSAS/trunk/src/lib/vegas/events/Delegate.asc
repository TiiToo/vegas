/* ---------- Delegate
 
	AUTHOR
	
		Name : Delegate
		type : SSAS
		Package : vegas.events
		Version : 1.0.0.0
		Date :  2006-04-05
		Author : ekameleon
		URL : http://www.ekameleon.net
		Mail : contact@ekameleon.net
 
	METHOD SUMMARY
	
		- create( scope:Object, method:Function ):Function

	USAGE 1

		var o = {} ;
		o.toString = function () {
			return "[myObject]" ;
		}
		
		var action = function () {
			trace(this + " - action") ;
			var l = arguments.length ;
			for (var i = 0 ; i<l ; i++) {
				trace("   > " + arguments[i]) ;
			}
		}
		
		var fProxy = vegas.events.Delegate.create(o, action, "arg3") ;
		fProxy("arg1", "arg2") ;
	
	USAGE 2
	
		var fProxy = new Delegate(o, action, "arg3") ;
		fProxy.run("arg1", "arg2") ; // TODO voir l'ordre des arguments
 
----------  */
 
var p = _global.getPackage("vegas.events") ;

if (p.Delegate == undefined) {
	
	// ----o Constructor
 
	vegas.events.Delegate = function(scope, method /*, [arg1, arg2, ..., argN]*/ ) {
		this._s = scope ;
		this._m = method ;
		this._a = [].concat( (Array.fromArguments(arguments)).splice(2) ) ;
		this._p = vegas.events.Delegate.create.apply(this, [this._s, this._m].concat(this._a) ) ;
	}
	
	// ----
 
	var constructor = vegas.events.Delegate ;
	var proto = constructor.extend(Object) ;
 
	// ----o Public Methods
 
 	proto.addArguments = function (/*[arg1, arg2, ..., argN]*/) {
		var args = Array.fromArguments(arguments) ;
		if (args.length > 0) {
			this._a = this._a.concat(args) ;
			this._p = vegas.events.Delegate.create.apply(this, [this._s, this._m].concat(this._a) ) ;
		}
	}
	
	proto.clone = function () {
		return new vegas.events.Delegate(this.getScope(), this.getMethod()) ;
	}
 
	/*static*/ constructor.create = function (scope /*Object*/ , method /*Function*/ ) /*Function*/ {
		
		var args /*Array*/ = Array.fromArguments(arguments) ;
		args = args.splice(2) ;
		
		return function() {
			var a /*Array*/ = Array.fromArguments(arguments) ;
			method.apply(scope, a.concat(args) ) ;
		}
		
	}

	proto.getArguments = function () /*Array*/ {
		return this._a ;
	}

	proto.getMethod = function () /*Function*/ {
		return this._m ;
	}
	
	proto.getScope = function () /*Object*/ {
		return this._s ;
	}
	
	proto.handleEvent = function ( e /*Event*/ ) {
		return this._m.apply( this._s, [e].concat(this._a) ) ;
	}

	proto.run = function() {
		this.addArguments.apply(this, Array.fromArguments(arguments)) ;
		this._p() ;
	}

	proto.setArguments = function () {
		var args = Array.fromArguments(arguments) ;
		if (args.length > 0) {
			this._a = [].concat(args) ;
			this._p = vegas.events.Delegate.create.apply(this, [this._s, this._m].concat(this._a) ) ;
		}
	}

	// ----o Encapsulate
 
	delete constructor ;
	delete proto ;

}
