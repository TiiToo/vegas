/*

  The contents of this file are subject to the Mozilla Public License Version
  1.1 (the "License"); you may not use this file except in compliance with
  the License. You may obtain a copy of the License at 
  
           http://www.mozilla.org/MPL/ 
  
  Software distributed under the License is distributed on an "AS IS" basis,
  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
  for the specific language governing rights and limitations under the License. 
  
  The Original Code is Vegas Framework.
  
  The Initial Developer of the Original Code is
  ALCARAZ Marc (aka eKameleon)  <vegas@ekameleon.net>.
  Portions created by the Initial Developer are Copyright (C) 2004-2007
  the Initial Developer. All Rights Reserved.
  
  Contributor(s) :
  
*/

Tests.asgard.net.TestNetServerConnection = function( name ) 
{
    buRRRn.ASTUce.TestCase.call( this, name ) ;
}

Tests.asgard.net.TestNetServerConnection.prototype = new buRRRn.ASTUce.TestCase() ;
Tests.asgard.net.TestNetServerConnection.prototype.constructor = Tests.asgard.net.TestNetServerConnection ;

Tests.asgard.net.TestNetServerConnection.prototype.testConstructor = function () 
{
	var nc = new asgard.net.NetServerConnection() ;
	this.assertTrue(nc instanceof asgard.net.NetServerConnection, "NSC_01 - constructor failed." ) ;
}

Tests.asgard.net.TestNetServerConnection.prototype.testInherit = function () 
{
	var nc = new asgard.net.NetServerConnection() ;
	this.assertTrue(nc instanceof vegas.events.AbstractCoreEventDispatcher, "NSC_02 - inherit failed." ) ;
}

Tests.asgard.net.TestNetServerConnection.prototype.testAddEventListener = function () 
{
	var nc = new asgard.net.NetServerConnection() ;
	this.assertTrue(nc.addEventListener instanceof Function, "NSC_00 - addEventListener failed." ) ;
}

Tests.asgard.net.TestNetServerConnection.prototype.testAddGlobalEventListener = function () 
{
	var nc = new asgard.net.NetServerConnection() ;
	this.assertTrue(nc.addGlobalEventListener instanceof Function, "NSC_00 - addGlobalEventListener failed." ) ;
}

Tests.asgard.net.TestNetServerConnection.prototype.testAddHeader = function () 
{
	var nc = new asgard.net.NetServerConnection() ;
	this.assertTrue(nc.addHeader instanceof Function, "NSC_00 - addHeader failed." ) ;
}

Tests.asgard.net.TestNetServerConnection.prototype.testClone = function () 
{
	var nc = new asgard.net.NetServerConnection() ;
	this.assertTrue(nc.clone instanceof Function, "NSC_00 - clone failed." ) ;
}

Tests.asgard.net.TestNetServerConnection.prototype.testClose = function () 
{
	var nc = new asgard.net.NetServerConnection() ;
	this.assertTrue(nc.close instanceof Function, "NSC_00 - close failed." ) ;	
}

Tests.asgard.net.TestNetServerConnection.prototype.testConnect = function() 
{
	var nc = new asgard.net.NetServerConnection() ;
	this.assertTrue(nc.connect instanceof Function, "NSC_00 - connect failed." ) ;
}

Tests.asgard.net.TestNetServerConnection.prototype.testDispatchEvent = function () 
{
	var nc = new asgard.net.NetServerConnection() ;
	this.assertTrue(nc.dispatchEvent instanceof Function, "NSC_00 - dispatchEvent failed." ) ;
}
	
Tests.asgard.net.TestNetServerConnection.prototype.testGetDelay = function () 
{
	var nc = new asgard.net.NetServerConnection() ;
	this.assertTrue(nc.getDelay instanceof Function, "NSC_00 - getDelay failed." ) ;
}

Tests.asgard.net.TestNetServerConnection.prototype.testGetEventDispatcher = function () 
{
	var nc = new asgard.net.NetServerConnection() ;
	this.assertTrue(nc.getEventDispatcher instanceof Function, "NSC_00 - getEventDispatcher failed." ) ;
}

Tests.asgard.net.TestNetServerConnection.prototype.testGetEventListeners = function () 
{
	var nc = new asgard.net.NetServerConnection() ;
	this.assertTrue(nc.getEventListeners instanceof Function, "NSC_00 - getEventListeners failed." ) ;
}

Tests.asgard.net.TestNetServerConnection.prototype.testGetGlobalEventListeners = function () 
{
	var nc = new asgard.net.NetServerConnection() ;
	this.assertTrue(nc.getGlobalEventListeners instanceof Function, "NSC_00 - getGlobalEventListeners failed." ) ;
}

Tests.asgard.net.TestNetServerConnection.prototype.testGetIsConnected = function ()
{

	var nc = new asgard.net.NetServerConnection() ;
	this.assertTrue(nc.getIsConnected instanceof Function, "NSC_00 - getIsConnected failed." ) ;

}

Tests.asgard.net.TestNetServerConnection.prototype.testGetLimitPolicy = function ()
{

	var nc = new asgard.net.NetServerConnection() ;
	this.assertTrue(nc.getLimitPolicy instanceof Function, "NSC_00 - getLimitPolicy failed." ) ;

}

Tests.asgard.net.TestNetServerConnection.prototype.testGetRegisteredEventNames = function () 
{

	var nc = new asgard.net.NetServerConnection() ;
	this.assertTrue(nc.getRegisteredEventNames instanceof Function, "NSC_00 - getRegisteredEventNames failed." ) ;
		
}
	
Tests.asgard.net.TestNetServerConnection.prototype.testGetParent = function ()
{

	var nc = new asgard.net.NetServerConnection() ;
	this.assertTrue(nc.getParent instanceof Function, "NSC_00 - getParent failed." ) ;

}

Tests.asgard.net.TestNetServerConnection.prototype.testGetUri = function ()
{

	var nc = new asgard.net.NetServerConnection() ;
	this.assertTrue(nc.getUri instanceof Function, "NSC_00 - getUri failed." ) ;

}

Tests.asgard.net.TestNetServerConnection.prototype.testHasEventListener = function ()
{
	var nc = new asgard.net.NetServerConnection() ;
	this.assertTrue(nc.hasEventListener instanceof Function, "NSC_00 - hasEventListener failed." ) ;
}


Tests.asgard.net.TestNetServerConnection.prototype.testInitEventDispatcher = function ()
{
	var nc = new asgard.net.NetServerConnection() ;
	this.assertTrue(nc.initEventDispatcher instanceof Function, "NSC_00_01 - initEventDispatcher failed." ) ;
	
	var dispatcher = nc.initEventDispatcher() ;
	this.assertTrue( dispatcher instanceof vegas.events.EventDispatcher , "NSC_00_02 - initEventDispatcher failed." ) ;
	
}

Tests.asgard.net.TestNetServerConnection.prototype.testRemoveEventListener = function ()
{
	var nc = new asgard.net.NetServerConnection() ;
	this.assertTrue(nc.removeEventListener instanceof Function, "NSC_00 - removeEventListener failed." ) ;
}

Tests.asgard.net.TestNetServerConnection.prototype.testRemoveGlobalEventListener = function () 
{
	var nc = new asgard.net.NetServerConnection() ;
	this.assertTrue(nc.removeGlobalEventListener instanceof Function, "NSC_00 - removeGlobalEventListener failed." ) ;
}


Tests.asgard.net.TestNetServerConnection.prototype.TestRun = function ()
{

	var nc = new asgard.net.NetServerConnection() ;
	this.assertTrue(nc.run instanceof Function, "NSC_00 - run failed." ) ;

}

Tests.asgard.net.TestNetServerConnection.prototype.TestSetDelay = function ()
{

	var nc = new asgard.net.NetServerConnection() ;
	this.assertTrue(nc.setDelay instanceof Function, "NSC_00 - setDelay failed." ) ;

}

Tests.asgard.net.TestNetServerConnection.prototype.TestSetLimitPolicy = function ()
{

	var nc = new asgard.net.NetServerConnection() ;
	this.assertTrue(nc.setLimitPolicy instanceof Function, "NSC_00 - setLimitPolicy failed." ) ;

}

Tests.asgard.net.TestNetServerConnection.prototype.testSetParent = function () 
{
	
	var nc = new asgard.net.NetServerConnection() ;
	this.assertTrue(nc.setParent instanceof Function, "NSC_00 - setParent failed." ) ;
	
}

Tests.asgard.net.TestNetServerConnection.prototype.testSetUri = function ()
{

	var nc = new asgard.net.NetServerConnection() ;
	this.assertTrue(nc.setUri instanceof Function, "NSC_00 - setUri failed." ) ;

}

Tests.asgard.net.TestNetServerConnection.prototype.testSharedEvent = function () 
{
	
	var nc = new asgard.net.NetServerConnection() ;
	this.assertTrue(nc.sharedEvent instanceof Function, "NSC_00 - sharedEvent failed." ) ;
	
}

Tests.asgard.net.TestNetServerConnection.prototype.testToSource = function () 
{
	
	var nc = new asgard.net.NetServerConnection() ;
	var source = nc.toSource() ;
	this.assertEquals(source, "new asgard.net.NetServerConnection()", "NSC_00 - toSource failed." ) ;
	
}

Tests.asgard.net.TestNetServerConnection.prototype.testToString = function () 
{
	
	var nc = new asgard.net.NetServerConnection() ;
	var source = nc.toString() ;
	this.assertEquals(source, "[NetServerConnection]", "NSC_00 - toString failed." ) ;
	
}

//*/
