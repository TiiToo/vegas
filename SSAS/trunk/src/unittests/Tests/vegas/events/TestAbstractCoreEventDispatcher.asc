/*

  The contents of this file are subject to the Mozilla Public License Version
  1.1 (the "License"); you may not use this file except in compliance with
  the License. You may obtain a copy of the License at 
  
           http://www.mozilla.org/MPL/ 
  
  Software distributed under the License is distributed on an "AS IS" basis,
  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
  for the specific language governing rights and limitations under the License. 
  
  The Original Code is Vegas Framework.
  
  The Initial Developer of the Original Code is
  ALCARAZ Marc (aka eKameleon)  <vegas@ekameleon.net>.
  Portions created by the Initial Developer are Copyright (C) 2004-2007
  the Initial Developer. All Rights Reserved.
  
  Contributor(s) :
  
*/

Tests.vegas.events.TestAbstractCoreEventDispatcher = function( name ) 
{
    buRRRn.ASTUce.TestCase.call( this, name ) ;
}

TestAbstractCoreEventDispatcher = Tests.vegas.events.TestAbstractCoreEventDispatcher ;

TestAbstractCoreEventDispatcher.prototype = new buRRRn.ASTUce.TestCase() ;
TestAbstractCoreEventDispatcher.prototype.constructor = TestAbstractCoreEventDispatcher ;

TestAbstractCoreEventDispatcher.prototype.testConstructor = function () 
{
	var o = new vegas.events.AbstractCoreEventDispatcher() ;
	this.assertTrue( o , "AC_ED_01 : constructor.") ;
}

TestAbstractCoreEventDispatcher.prototype.testInherit = function () 
{
	var o = new vegas.events.AbstractCoreEventDispatcher() ;
	var b = o instanceof vegas.events.IEventDispatcher ;
	this.assertTrue( b , "AC_ED_02 : inherit IEventDispatcher.") ;
}

TestAbstractCoreEventDispatcher.prototype.testHashCode = function () 
{
	var o = new vegas.events.AbstractCoreEventDispatcher() ;
	var result = o.hashCode() ;
	this.assertTrue( !isNaN(result) , "AC_ED_03 : hashCode : " + result ) ;
}

TestAbstractCoreEventDispatcher.prototype.testToSource = function () 
{
	var o = new vegas.events.AbstractCoreEventDispatcher() ;
	var result = o.toSource() ;
	this.assertEquals( result , "new vegas.events.AbstractCoreEventDispatcher()", "AC_ED_04 : toSource().") ;
}

TestAbstractCoreEventDispatcher.prototype.testToString = function () 
{
	var o = new vegas.events.AbstractCoreEventDispatcher() ;
	var result = o.toString() ;
	this.assertEquals( result , "[AbstractCoreEventDispatcher]", "AC_ED_05 : toString() : " + result) ;
}

TestAbstractCoreEventDispatcher.prototype.testAddEventListener = function () 
{
	var o = new vegas.events.AbstractCoreEventDispatcher() ;
	o.addEventListener("MY_EVENT", this) ;
	var b = o.hasEventListener("MY_EVENT") ;
	this.assertTrue( b , "AC_ED_06 : addEventListener." ) ;
}

TestAbstractCoreEventDispatcher.prototype.testAddGlobalEventListener = function () 
{
	var o = new vegas.events.AbstractCoreEventDispatcher() ;
	o.addGlobalEventListener(this) ;
	var listeners = o.getGlobalEventListeners() ;
	this.assertTrue( (listeners.size() > 0) , "AC_ED_07 : addGlobalEventListener." ) ;
}

TestAbstractCoreEventDispatcher.prototype.testDispatchEvent = function () 
{
	var o = new vegas.events.AbstractCoreEventDispatcher() ;
	o.addEventListener("MY_EVENT", this) ;
	var e = o.dispatchEvent( new vegas.events.BasicEvent("MY_EVENT", this, "AC_ED_08 : dispatchEvent") ) ;
	this.assertTrue( e , "AC_ED_08 : dispatchEvent failed." ) ;
}

TestAbstractCoreEventDispatcher.prototype.testGetEventDispatcher = function () 
{
	var o = new vegas.events.AbstractCoreEventDispatcher() ;
	var d = o.getEventDispatcher() ;
	this.assertTrue( d , "AC_ED_09 : getEventDispatcher failed." ) ;
}

TestAbstractCoreEventDispatcher.prototype.testGetEventListeners = function () 
{
	var o = new vegas.events.AbstractCoreEventDispatcher() ;
	o.addEventListener("MY_EVENT", this) ;
	var listeners = o.getEventListeners("MY_EVENT") ;
	this.assertTrue( listeners.size() > 0 , "AC_ED_10 : getEventListeners failed." ) ;
}

TestAbstractCoreEventDispatcher.prototype.testGetParent = function () 
{
	var o1 = new vegas.events.AbstractCoreEventDispatcher() ;
	var o2 = new vegas.events.AbstractCoreEventDispatcher() ;
	o2.setParent(o1) ;
	this.assertEquals( o2.getParent() , o1,  "AC_ED_11 : getPÃ¤rent failed." ) ;
}

TestAbstractCoreEventDispatcher.prototype.testGetRegisteredEventNames = function () 
{
	var o = new vegas.events.AbstractCoreEventDispatcher() ;
	o.addEventListener("MY_EVENT", this) ;
	var set = o.getRegisteredEventNames() ;
	this.assertTrue( set,  "AC_ED_12 : getRegisteredEventNames > " + set ) ;
}

TestAbstractCoreEventDispatcher.prototype.testHasEventListener = function () 
{
	var o = new vegas.events.AbstractCoreEventDispatcher() ;
	o.addEventListener("MY_EVENT", this) ;
	var b = o.hasEventListener("MY_EVENT") ;
	this.assertTrue( b , "AC_ED_13 : hasEventListener failed." ) ;
}

TestAbstractCoreEventDispatcher.prototype.testInitEventDispatcher = function () 
{
	var o = new vegas.events.AbstractCoreEventDispatcher() ;
	var b = o.initEventDispatcher() instanceof vegas.events.EventDispatcher ;
	this.assertTrue( b, "AC_ED_14 : initEventDispatcher return an EventDispatcher object." ) ;
}

TestAbstractCoreEventDispatcher.prototype.testRemoveEventListener = function () 
{
	var o = new vegas.events.AbstractCoreEventDispatcher() ;
	o.addEventListener("MY_EVENT", this) ;
	var result = o.removeEventListener("MY_EVENT", this) ;
	this.assertTrue( result != null , "AC_ED_15 - removeEventListener failed." ) ;
}

TestAbstractCoreEventDispatcher.prototype.testRemoveGlobalEventListener = function () 
{
	var o = new vegas.events.AbstractCoreEventDispatcher() ;
	o.addGlobalEventListener(this) ;
	var result = o.removeGlobalEventListener(this) ;
	var listeners = o.getGlobalEventListeners() ;
	var test /*Boolean*/ = (result != null) && (listeners.size() == 0) ;
	this.assertTrue( test , "AC_ED_16 : removeGlobalEventListener." ) ;
}

TestAbstractCoreEventDispatcher.prototype.testSetEventDispatcher = function () 
{
	var e = new vegas.events.EventDispatcher() ;
	var o = new vegas.events.AbstractCoreEventDispatcher() ;
	o.setEventDispatcher( e ) ;
	this.assertEquals( e , o.getEventDispatcher() , "AC_ED_17 : setEventDispatcher failed." ) ;
}


TestAbstractCoreEventDispatcher.prototype.testSetParent = function () 
{
	var o1 = new vegas.events.AbstractCoreEventDispatcher() ;
	var o2 = new vegas.events.AbstractCoreEventDispatcher() ;
	o2.setParent(o1) ;
	this.assertEquals( o2.getParent() , o1,  "AC_ED_18 : setParent failed." ) ;
}


/**
 * @private
 */
TestAbstractCoreEventDispatcher.prototype.handleEvent = function ( e ) 
{
	
	this.assertTrue( e instanceof vegas.events.BasicEvent , e.getContext() ) ;
	
}

delete TestAbstractCoreEventDispatcher ;