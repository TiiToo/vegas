///////////////////////////

load( "buRRRn.js" ) ;
load( "core.js"   ) ;
load( "system.js" ) ;

load( "vegas.asc" ) ;

///////////////////////////

load("unittests/Application.js") ;

///////////////////////////

callBadVersion = function( connection /*Connection*/ , info /*ConnectionInfo*/ )
{
    trace( "callBadVersion" ) ;
}

callFailed = function( connection /*Connection*/ , info /*ConnectionInfo*/ )
{
    trace( "callFailed" ) ;
}

connectAppShutDown = function( connection /*Connection*/ , info /*ConnectionInfo*/ )
{
    trace( "connectAppShutDown" ) ;
}

connectClosed = function( connection /*Connection*/ , info /*ConnectionInfo*/ )
{
    trace( "connectClosed" ) ;
}

connectFailed = function( connection /*Connection*/ , info /*ConnectionInfo*/ )
{
    trace( "connectFailed" ) ;
}

connectRejected = function( connection /*Connection*/ , info /*ConnectionInfo*/ )
{
    trace( "connectRejected" ) ;
}

connectSuccess = function( connection /*Connection*/ , info /*ConnectionInfo*/ )
{
    trace( "connectSuccess" ) ;
}

proxyNotResponding = function( connection /*Connection*/ , info /*ConnectionInfo*/ )
{
    trace( "proxyNotResponding" ) ;
}

info = function( connection /*Connection*/ , info /*ConnectionInfo*/ )
{
    trace( "connected:" + connection.connected + " info:" + info ) ;
}

finish = function( connection /*Connection*/ )
{
    trace( "### finish") ;
}

start = function( connection /*Connection*/ )
{
    trace( "### start") ;
}


connection = new vegas.net.Connection() ;

connection.finishIt.connect( finish ) ;
connection.startIt.connect( start ) ;

connection.infoIt.connect( info ) ;

connection.callBadVersion.connect( callBadVersion ) ;
connection.callFailed.connect( callFailed ) ;

connection.connectAppShutDown.connect( connectAppShutDown ) ;
connection.connectClosed.connect( connectClosed ) ;
connection.connectFailed.connect( connectFailed ) ;
connection.connectRejected.connect( connectRejected ) ;
connection.connectSuccess.connect( connectSuccess ) ;

connection.proxyNotResponding.connect( proxyNotResponding ) ;

connection.connect( "rtmp://localhost/example" ) ;