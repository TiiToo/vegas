
/** ArrayFieldIterator

	AUTHOR

		Name : ArrayFieldIterator
		type : SSAS
		Package : vegas.data.iterator
		Version : 1.0.0.0
		Author : ekameleon
		Date : 2006-01-09
		URL : http://www.ekameleon.net
		Mail : vegas@ekameleon.net

	METHOD SUMMARY

		- hasNext()
		
		- key()
		
		- next()
		
		- reset()
		
		- remove()
		
		- seek( n:Number )
		
		- reset()
		
		- toString()
	
	INHERIT
	
		CoreObject > ArrayIterator > ArrayFieldIterator
	
	EXAMPLE
	
		var ar = [
			{ name : "bob" , value : "coucou" } ,
			{ name : "alfred" , value : "hello" } ,
			{ name : "chloé" , value : "bonjour" }
		] ;
		
		var it = new vegas.data.iterator.ArrayFieldIterator(ar, "name") ;
		
		while(it.hasNext()) {
			var value = it.next() ;
			var key = it.key() ;
			trace (key + " : " + value) ;
		}
		
		// output
		// 0 : bob
		// 1 : alfred
		// 2 : chloé

**/ 

if (vegas.data.iterator.ArrayFieldIterator == undefined) {
	
	// ----o Imports
	
	if (vegas.data.iterator.ArrayIterator == null) {
		
		load(PATH + "vegas/data/iterator/ArrayIterator.asc") ;
		
	}

	// ----o Constructor

	vegas.data.iterator.ArrayFieldIterator = function ( ar /*Array*/ , fieldName /*String*/ ) { 
		this.constructor.apply(this, [ar]) ; // super
		this.fieldName = (fieldName || null) ;
	}

	// ----o Inherit

	vegas.data.iterator.ArrayFieldIterator.extend(vegas.data.iterator.ArrayIterator) ;

	// ---- Public Methods
	
	vegas.data.iterator.ArrayFieldIterator.prototype.next = function () {
		var o = this._a[++this._k] ;
		return (this.fieldName != null) ? o[this.fieldName] : o ;
	}
	
	// trace ("***** running vegas.data.iterator.ArrayFieldIterator") ;

}