/*

  The contents of this file are subject to the Mozilla Public License Version
  1.1 (the "License"); you may not use this file except in compliance with
  the License. You may obtain a copy of the License at 
  
           http://www.mozilla.org/MPL/ 
  
  Software distributed under the License is distributed on an "AS IS" basis,
  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
  for the specific language governing rights and limitations under the License. 
  
  The Original Code is Vegas Framework.
  
  The Initial Developer of the Original Code is
  ALCARAZ Marc (aka eKameleon)  <vegas@ekameleon.net>.
  Portions created by the Initial Developer are Copyright (C) 2004-2007
  the Initial Developer. All Rights Reserved.
  
  Contributor(s) :
  
*/

/** class DateComparator

	AUTHOR

		Name : DateComparator
		type : SSAS
		Package : vegas.util.comparators
		Version : 1.0.0.0
		Author : ekameleon
		Date : 2006-01-13
		URL : http://www.ekameleon.net
		Mail : vegas@ekameleon.net
	
	METHOD SUMMARY
	
		- compare(o1, o2):Number
			
			RETURNS 
			
				- -1 if o1 is "lower" than (less than, before, etc.) o2 ;
				- 1 if o1 is "higher" than (greater than, after, etc.) o2 ;
				- 0 if o1 and o2 are equal.
		
		- equals(d:Date):Boolean
		
		- toSource():String
		
		- toString():String
	
	INHERIT
	
		Equality, Comparator, Serializable, ToString

**/ 

if (vegas.util.comparators.DateComparator == undefined) {
	
	// ----o Constructor

	vegas.util.comparators.DateComparator = function ( date /*Date*/ ) { 
		this.date = (date instanceof Date) ? date : new Date() ;
	}

	// ----o Inherit
	
	vegas.util.comparators.DateComparator.extend(vegas.core.IComparator) ;

	// ----o Public Methods
	
	vegas.util.comparators.DateComparator.prototype.clone = function () {
		return new vegas.util.comparators.DateComparator(this.date) ;
	}
	
	vegas.util.comparators.DateComparator.prototype.equals = function (o) /*Boolean*/ {
		if (o instanceof Date)  {
			return this.compare(this.date, o) == 0 ;
		} else {
			return false ;
		}
	}
	
	vegas.util.comparators.DateComparator.prototype.compare = function (o1, o2) /*Number*/ {
		var p = _global.getNamespace("vegas.util") ;
		var b1 /*Boolean*/ = p.TypeUtil.typesMatch(o1, Number) || p.TypeUtil.typesMatch(o1, Date) ;
		var b2 /*Boolean*/ = p.TypeUtil.typesMatch(o2, Number) || p.TypeUtil.typesMatch(o2, Date)
		if (b1 && b2) {
				var a /*Number*/ = (o1 instanceof Date) ? o1.valueOf() : o1 ;
				var b /*Number*/ = (o2 instanceof Date) ? o2.valueOf() : o2 ;
				if( a < b ) return -1;
				else if( a > b ) return 1;
				else return 0 ;
				
		} else {
			throw new vegas.errors.IllegalArgumentError("DateComparator.compare(o1, o2)") ;
		}
	}

	//trace ("***** running vegas.util.comparators.DateComparator") ;
	
}
