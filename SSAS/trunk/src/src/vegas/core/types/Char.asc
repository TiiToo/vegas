/*

  The contents of this file are subject to the Mozilla Public License Version
  1.1 (the "License"); you may not use this file except in compliance with
  the License. You may obtain a copy of the License at 
  
           http://www.mozilla.org/MPL/ 
  
  Software distributed under the License is distributed on an "AS IS" basis,
  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
  for the specific language governing rights and limitations under the License. 
  
  The Original Code is Vegas Framework.
  
  The Initial Developer of the Original Code is
  ALCARAZ Marc (aka eKameleon)  <vegas@ekameleon.net>.
  Portions created by the Initial Developer are Copyright (C) 2004-2005
  the Initial Developer. All Rights Reserved.
  
  Contributor(s) :
  
*/

/** Char

	AUTHOR

		Name : Char
		type : SSAS
		Package : vegas.core.types
		Version : 1.0.0.0
		Author : ekameleon
		Date : 2006-05-31
		URL : http://www.ekameleon.net
		Mail : vegas@ekameleon.net
	
	DESCRIPTION
	
		Charactère.

	METHOD SUMMARY

		- getCode():Number
		
		- hashCode():Number
		
		- toString():String
		
		- valueOf()
	
	INHERIT
	
		String → Char  

	IMPLEMENTS
	
		IFormattable, IHashable

	EXAMPLE
	
		var c = new vegas.core.types.Char("Test") ;
		trace("char : " + c) ;
		trace("char code : " + c.getCode()) ;
		trace("char size : " + c.length) ;

**/ 

_global.getPackage("vegas.core.types") ;

if (vegas.core.types.Char == undefined) {

	// ----o Constructor

	vegas.core.types.Char = function ( s /*String*/ ) {
		if (vegas.util.TypeUtil.typesMatch(s, String)) {
			this._char = (s || "").substring(0, 1) ;
		} else {
			throw new vegas.errors.IllegalArgumentError("Char constructor, 's' value must be a String.") ;
		}
	}

	var constructor = vegas.core.types.Char ;
	var proto = constructor.extend(String) ;
	
	// ----o Public Methods

	proto.getCode = function() /*Number*/ {
		return this._char.charCodeAt(0) ;
	}

	proto.toString = function() /*String*/ {
		return this._char.toString() ;
	}

	proto.valueOf = function() {
		return this._char.valueOf() ;
	}

	// ----o Private Properties
	
	proto._char /*String*/ = null ;

	// ----o Encapsulate

	delete constructor ;
	delete proto ;
	
	//trace ("***** running vegas.core.types.Char") ;
	
}