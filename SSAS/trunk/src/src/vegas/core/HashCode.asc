/*

  The contents of this file are subject to the Mozilla Public License Version
  1.1 (the "License"); you may not use this file except in compliance with
  the License. You may obtain a copy of the License at 
  
           http://www.mozilla.org/MPL/ 
  
  Software distributed under the License is distributed on an "AS IS" basis,
  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
  for the specific language governing rights and limitations under the License. 
  
  The Original Code is Vegas Framework.
  
  The Initial Developer of the Original Code is
  ALCARAZ Marc (aka eKameleon)  <vegas@ekameleon.net>.
  Portions created by the Initial Developer are Copyright (C) 2004-2005
  the Initial Developer. All Rights Reserved.
  
  Contributor(s) :
  
*/

/* ---------- HashCode

	AUTHOR
	
		Name : HashCode
		type : SSAS
		Package : vegas.core
		Version : 1.0.0.0
		Author : ekameleon
		Date : 2006-04-16
	
	
	METHOD SUMMARY
		
		- static equals(o1, o2):Boolean
		
			return 'true' if o1 and o2 are the same HashCode.
		
		- static identify(o):Number
		
			return the hashcode of an object.
		
		- static next():Number
		
			return the next unique hashCode number.
		
		- static nextName():String
		
			Returns next available object's name. Use for building a default name for an object.

---------- */ 

if (HashCode == undefined) {


	// ----o Singleton

	HashCode = {} ;

	// ----o Public Methods
	
	HashCode.equals = function ( o1, o2 ) /*Boolean*/ {
		
		return HashCode.identify(o1) == HashCode.identify(o2) ;
		
	}
	
	HashCode.identify = function ( o ) /*Number*/ {
		
		return o.hashCode() ;
		
	}
	
	HashCode.next = function () /*Number*/ {
		return HashCode._nHash ++ ;
	}

	HashCode.nextName = function () /*String*/ {
		
		return String(HashCode._nHash + 1) ;
		
	}

	// ----o Private Properties
	
	
	HashCode._nHash /*Number*/ = 1 ;
	
	
	
	
}
