/*

  The contents of this file are subject to the Mozilla Public License Version
  1.1 (the "License"); you may not use this file except in compliance with
  the License. You may obtain a copy of the License at 
  
           http://www.mozilla.org/MPL/ 
  
  Software distributed under the License is distributed on an "AS IS" basis,
  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
  for the specific language governing rights and limitations under the License. 
  
  The Original Code is Vegas Framework.
  
  The Initial Developer of the Original Code is
  ALCARAZ Marc (aka eKameleon)  <vegas@ekameleon.net>.
  Portions created by the Initial Developer are Copyright (C) 2004-2005
  the Initial Developer. All Rights Reserved.
  
  Contributor(s) :
  
*/

/** TimerEvent
 
	AUTHOR
	
		Name : TimerEvent
		type : SSAS
		Package : vegas.events
		Version : 1.0.0.0
		Date :  2006-05-28
		Author : ekameleon
		URL : http://www.ekameleon.net
		Mail : contact@ekameleon.net
 
	PROPERTY SUMMARY

		- bubbles:Boolean [R/W]
		
		- context [R/W]
		
		- currentTarget [R/W]
		
		- eventPhase:Number [R/W]
		
		- target [R/W]
		
		- type:String [R/W]

	METHOD SUMMARY

		- cancel():Void
		
		- clone():BasicEvent
		
		- getBubbles():Boolean
		
		- getContext()
		
		- getCurrentTarget()
		
		- getEventPhase():Number
		
		- getTarget()
		
		- getTimeStamp():Number
		
		- getType():String
		
		- initEvent(type:String, bubbles:Boolean, cancelable:Boolean)
		
		- isCancelled():Boolean
		
		- isQueued():Boolean
		
		- queueEvent():Void
		
		- setBubbles(b:Boolean):Void
		
		- setContext(context):Void
		
		- setCurrentTarget(target):Void
		
		- setEventPhase(n:Number):Void
		
		- setTarget(target):Void
		
		- setType(type:String):Void
		
		- stopImmediatePropagation():Void
		
		- toString():String
	
	INHERIT
	
		CoreObject → Event → BasicEvent → DynamicEvent → TimerEvent
 
	IMPLEMENTS
	
		Event, ICloneable, IFormattable, IHashable
 
 **/
 
_global.getPackage("vegas.events") ;

if (vegas.events.TimerEvent == undefined) {
	
	// ----o Imports
	
	loadFile("vegas/events/DynamicEvent.asc") ;
	
	// ----o Constructor
 
	vegas.events.TimerEvent = function(type/*String*/, target/*Object*/, context/*Object*/) {
		vegas.events.DynamicEvent.apply(this, Array.fromArguments(arguments)) ;
	}
	
	// ----o Inherit
 
	var constructor = vegas.events.TimerEvent ;
	var proto = constructor.extend( vegas.events.DynamicEvent ) ;
 
	// ----o Public Methods
	
	proto.clone = function () {
		return new vegas.events.TimerEvent(this.getType() , this.getTarget()) ;
	}
	
	// ----o Encapsulate
 
	delete constructor ;
	delete proto ;

	// trace ("***** running vegas.events.TimerEvent") ;

}
