/*

  The contents of this file are subject to the Mozilla Public License Version
  1.1 (the "License"); you may not use this file except in compliance with
  the License. You may obtain a copy of the License at 
  
           http://www.mozilla.org/MPL/ 
  
  Software distributed under the License is distributed on an "AS IS" basis,
  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
  for the specific language governing rights and limitations under the License. 
  
  The Original Code is Vegas Framework.
  
  The Initial Developer of the Original Code is
  ALCARAZ Marc (aka eKameleon)  <vegas@ekameleon.net>.
  Portions created by the Initial Developer are Copyright (C) 2004-2005
  the Initial Developer. All Rights Reserved.
  
  Contributor(s) :
  
*/

/** EventListenerContainer

	AUTHOR

		Name : EventListenerContainer
		type : SSAS
		Package : vegas.events
		Version : 1.0.0.0
		Author : ekameleon
		Date : 2006-05-25
		URL : http://www.ekameleon.net
		Mail : vegas@ekameleon.net
	
	METHOD SUMMARY
	
		- enableAutoRemove(enable:Boolean):Void
		
		- getPriority():Number
		
		- isAutoRemoveEnabled():Boolean
		
		- getListener():EventListener
		
		- setPriority(n:Number):Void
		
		- toString():String
	
	INHERIT
	
		Object → EventListenerContainer
	
	IMPLEMENT

		IFormattable, IHashable
	
**/ 

// TODO ajouter une classe CoreObject (toString()) + héritage sur cette classe.

var namespace = _global.getPackage("vegas.events") ;

if (namespace.EventListenerContainer == undefined) {

	// ----o Constructor

	vegas.events.EventListenerContainer = function ( listener /*EventListener*/ ) {
		this._listeners = listener ;
	}

	var constructor = vegas.events.EventListenerContainer ;
	var proto = constructor.extend(Object) ;
	
	// ----o Public Properties
	
	proto.useCaptude /*Boolean*/ = null ;
	
	// ----o Private Properties
	
	proto._autoRemove /*Boolean*/ = false ;
	proto._listeners /*EventListener*/ = null ;
	proto._priority  /*Number*/ = 1 ;

	// ----o Public Methods
		
	proto.enableAutoRemove = function ( enable /*Boolean*/ ) {
		this._autoRemove = enable;
	}

	proto.getPriority = function () /*Number*/ {
		return (this._priority > 0) ? this._priority : 0 ;
	}

	proto.isAutoRemoveEnabled = function () /*Boolean*/ {
        return this._autoRemove;
    }

	proto.getListener = function ()/*EventListener*/ {
        return this._listener ;
    }
    
	proto.setPriority = function (n/*Number*/)/*Void*/ {
		this._priority = (n>0) ? n : 0 ;
	}

	// ----o Encapsulate

	delete constructor ;
	delete proto ;
	
	//trace ("***** running vegas.events.EventListenerContainer") ;
	
}

delete namespace ;